generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int              @id @default(autoincrement())
  uid           String           @unique
  name          String           @default("Ninja")
  email         String           @unique
  iconUrl       String?
  role          Role             @default(USER)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  userWallets   UserWallets[]
  posts         Post[]
  fromTransfers SolanaTransfer[] @relation("SolanaTransferFromUser")
  toTransfers   SolanaTransfer[] @relation("SolanaTransferToUser")
}

enum Role {
  USER
  ADMIN
  MASTER
}

model Post {
  id         Int      @id @default(autoincrement())
  title      String   @default("title")
  body       String   @default("body")
  goodNum    Int      @default(0)
  greatNum   Int      @default(0)
  awesomeNum Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     Int?
  user       User?    @relation(fields: [userId], references: [id])

  @@unique([title, userId])
  @@index([title])
  @@index([body])
}

model UserWallets {
  id         Int      @id @default(autoincrement())
  name       String   @default("EpicsDAO")
  chainType  String   @default("Solana")
  imgUrl     String   @default("")
  pubkey     String   @default("")
  privateKey String   @default("")
  priority   Int      @default(5)
  sol        Float    @default(0)
  usdc       Float    @default(0)
  epct       Float    @default(0)
  iv         Bytes
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     Int?
  user       User?    @relation(fields: [userId], references: [id])

  @@unique([name, userId])
  @@index([pubkey])
}

model SolanaTransfer {
  id            Int      @id @default(autoincrement())
  amountLamport Float    @default(0)
  fromUser      User     @relation("SolanaTransferFromUser", fields: [fromUserId], references: [id])
  fromUserId    Int
  toUser        User     @relation("SolanaTransferToUser", fields: [toUserId], references: [id])
  toUserId      Int
  signature     String   @default("")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
